import streamlit as st
import pandas as pd
from enum import Enum


# -------------------------------
# Enum para tipos de colunas
# -------------------------------
class TipoColuna(Enum):
    OBRIGATORIA = "obrigat√≥ria"
    CONDICIONAL = "condicional"
    FACULTATIVA = "facultativa"


# -------------------------------
# Estrutura dos formatos
# -------------------------------
formatos = {
    "vida": {
        "titulo": "IMPORTA√á√ïES DE VIDA",
        "obrigatorias": ["CPF", "Nome", "Nascimento", "Sexo", "Inclus√£o"],
        "condicionais": ["Carteirinha", "C√≥digo Plano", "Acomoda√ß√£o"],
        "facultativas": ["Telefone", "E-mail", "Endere√ßo", "Cargo"]
    },
    "saude": {
        "titulo": "IMPORTA√á√ïES DE SA√öDE",
        "obrigatorias": [
            "CPF", "Parentesco", "Nome", "Nascimento", "Sexo",
            "Estado civil", "Nome da m√£e", "Inclus√£o", "Envio", "Entrada"
        ],
        "condicionais": [
            "CPF Titular", "C√≥digo/Nome Unidade", "C√≥digo Centro Custo",
            "Centro de custo", "C√≥digo/Nome unidade de atendimento",
            "C√≥digo Plano", "Plano", "Acomoda√ß√£o", "Id do tipo de comiss√£o",
            "Grupo", "Seq. Grupo", "Carteirinha", "End. Res. CEP",
            "End. Res. Logradouro", "End. Res. Bairro", "End. Res. Cidade",
            "End. Res. UF", "Tel. Res. DDD", "Tel. Res.", "Tel. Com. DDD",
            "Tel. Com.", "Tel. Cel. DDD", "Tel. Cel.", "Banco", "Ag√™ncia",
            "D√≠gito da Ag√™ncia", "Conta"
        ],
        "facultativas": [
            "Contrato","Agregado","Altura","Peso","Nome do Pai","Cargo","RE",
            "Admiss√£o","C√≥digo/Nome Unidade","Conclus√£o","Previs√£o Carteirinha",
            "Chegada Carteirinha","Envio Carteirinha","Vencimento Carteirinha",
            "C√≥digo do usu√°rio na Cia.","Limite de reembolso","RG","RG emiss√£o",
            "√ìrg√£o emissor","PIS","CNS","CTPS","CTPS Emis.","Nascido Vivo",
            "End. Res. N¬∫","End. Res. Comp","Tel. Res. Comp.","Tel. Com. Comp.",
            "Tel. Cel. Comp.","E-mail pessoal","E-mail comercial"
        ]
    }
}


# -------------------------------
# Fun√ß√£o para gerar lista de colunas
# -------------------------------
def gerar_colunas(formato: str):
    colunas = []
    for nome in formatos[formato]["obrigatorias"]:
        colunas.append({"nome": nome, "tipo": TipoColuna.OBRIGATORIA.value})
    for nome in formatos[formato]["condicionais"]:
        colunas.append({"nome": nome, "tipo": TipoColuna.CONDICIONAL.value})
    for nome in formatos[formato]["facultativas"]:
        colunas.append({"nome": nome, "tipo": TipoColuna.FACULTATIVA.value})
    return colunas


# -------------------------------
# Fun√ß√£o para validar obrigat√≥rias
# -------------------------------
def validar_obrigatorias(df, obrigatorias):
    erros = []
    for col in obrigatorias:
        if col not in df.columns:
            erros.append(f"Coluna obrigat√≥ria '{col}' n√£o encontrada no arquivo.")
        elif df[col].isnull().any():
            erros.append(f"Coluna obrigat√≥ria '{col}' cont√©m valores nulos.")
    return erros


# -------------------------------
# App Streamlit
# -------------------------------
st.title("Validador de Importa√ß√µes")

# Escolha do formato
formato_escolhido = st.selectbox(
    "Selecione o tipo de importa√ß√£o",
    list(formatos.keys()),
    format_func=lambda x: formatos[x]["titulo"]
)

st.subheader("Colunas esperadas")

# Exibir tabela de colunas com √≠cones
cores = {"obrigat√≥ria": "üî¥", "condicional": "üîµ", "facultativa": "üü¢"}
colunas_formatadas = [
    {"Coluna": col["nome"], "Tipo": cores[col["tipo"]]}
    for col in gerar_colunas(formato_escolhido)
]
st.table(pd.DataFrame(colunas_formatadas))

# Upload do arquivo Excel
arquivo = st.file_uploader("Envie o arquivo Excel", type=["xlsx"])

if arquivo:
    df = pd.read_excel(arquivo)
    st.subheader("Pr√©via dos dados")
    st.dataframe(df.head())

    erros = validar_obrigatorias(df, formatos[formato_escolhido]["obrigatorias"])

    st.subheader("Valida√ß√£o")
    if erros:
        st.error("Foram encontrados erros:")
        for e in erros:
            st.write(f"- {e}")
    else:
        st.success("Arquivo v√°lido para importa√ß√£o!")
